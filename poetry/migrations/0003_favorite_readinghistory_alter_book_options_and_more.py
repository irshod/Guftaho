# Generated by Django 5.2.6 on 2025-09-29 14:08

import django.core.validators
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('poetry', '0002_alter_book_options_alter_poem_options_and_more'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('poet', 'Шоир'), ('book', 'Китоб'), ('poem', 'Шеър')], max_length=20)),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Дӯстдоштаи корбар',
                'verbose_name_plural': 'Дӯстдоштаҳои корбарон',
            },
        ),
        migrations.CreateModel(
            name='ReadingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('reading_progress', models.PositiveIntegerField(default=100, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Пешравии хондан (%)')),
            ],
            options={
                'verbose_name': 'Таърихи хондан',
                'verbose_name_plural': 'Таърихи хондан',
                'ordering': ['-read_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='book',
            options={'ordering': ['-publication_date', 'title'], 'verbose_name': 'Китоб', 'verbose_name_plural': 'Китобҳо'},
        ),
        migrations.AddField(
            model_name='book',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='Намоён кардан'),
        ),
        migrations.AddField(
            model_name='book',
            name='isbn',
            field=models.CharField(blank=True, max_length=13, verbose_name='ISBN'),
        ),
        migrations.AddField(
            model_name='book',
            name='language',
            field=models.CharField(default='Тоҷикӣ', max_length=50, verbose_name='Забон'),
        ),
        migrations.AddField(
            model_name='book',
            name='page_count',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Шумораи саҳифаҳо'),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Нишонаҳо'),
        ),
        migrations.AddField(
            model_name='book',
            name='view_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Шумораи бозид'),
        ),
        migrations.AddField(
            model_name='poem',
            name='difficulty_level',
            field=models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Дараҷаи душворӣ'),
        ),
        migrations.AddField(
            model_name='poem',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='Намоён кардан'),
        ),
        migrations.AddField(
            model_name='poem',
            name='line_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Шумораи сатрҳо'),
        ),
        migrations.AddField(
            model_name='poem',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Нишонаҳо'),
        ),
        migrations.AddField(
            model_name='poem',
            name='view_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Шумораи бозид'),
        ),
        migrations.AddField(
            model_name='poem',
            name='word_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Шумораи калимаҳо'),
        ),
        migrations.AddField(
            model_name='poet',
            name='birth_place',
            field=models.CharField(blank=True, max_length=200, verbose_name='Ҷои таваллуд'),
        ),
        migrations.AddField(
            model_name='poet',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='Намоён кардан'),
        ),
        migrations.AddField(
            model_name='poet',
            name='nationality',
            field=models.CharField(blank=True, max_length=100, verbose_name='Миллият'),
        ),
        migrations.AddField(
            model_name='poet',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Нишонаҳо'),
        ),
        migrations.AddField(
            model_name='poet',
            name='view_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Шумораи бозид'),
        ),
        migrations.AlterField(
            model_name='book',
            name='title',
            field=models.CharField(db_index=True, max_length=200, verbose_name='Унвон'),
        ),
        migrations.AlterField(
            model_name='poem',
            name='title',
            field=models.CharField(db_index=True, max_length=200, verbose_name='Унвон'),
        ),
        migrations.AlterField(
            model_name='poet',
            name='name',
            field=models.CharField(db_index=True, max_length=200, verbose_name='Ном'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['title'], name='poetry_book_title_433171_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['publication_date'], name='poetry_book_publica_9407d3_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['is_featured'], name='poetry_book_is_feat_71d932_idx'),
        ),
        migrations.AddIndex(
            model_name='poem',
            index=models.Index(fields=['title'], name='poetry_poem_title_cab765_idx'),
        ),
        migrations.AddIndex(
            model_name='poem',
            index=models.Index(fields=['order'], name='poetry_poem_order_b89bd0_idx'),
        ),
        migrations.AddIndex(
            model_name='poem',
            index=models.Index(fields=['is_featured'], name='poetry_poem_is_feat_ddd1f3_idx'),
        ),
        migrations.AddIndex(
            model_name='poem',
            index=models.Index(fields=['book', 'order'], name='poetry_poem_book_id_aa1cfa_idx'),
        ),
        migrations.AddIndex(
            model_name='poet',
            index=models.Index(fields=['name'], name='poetry_poet_name_e02841_idx'),
        ),
        migrations.AddIndex(
            model_name='poet',
            index=models.Index(fields=['birth_date'], name='poetry_poet_birth_d_41b89f_idx'),
        ),
        migrations.AddIndex(
            model_name='poet',
            index=models.Index(fields=['is_featured'], name='poetry_poet_is_feat_fa3a09_idx'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='readinghistory',
            name='poem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poetry.poem'),
        ),
        migrations.AddField(
            model_name='readinghistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_history', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together={('user', 'content_type', 'object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='readinghistory',
            unique_together={('user', 'poem')},
        ),
    ]
